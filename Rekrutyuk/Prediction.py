# -*- coding: utf-8 -*-
"""Using_Naive_Bayes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11Hh4pnjVCRsSa2UawfPYQi2JMjTsy1tU
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

xls = pd.ExcelFile('Employee_data_New.xlsx')
df = pd.read_excel(xls, 'employee')
df_dict = pd.read_excel(xls, 'data_dictionary')

df.head()

df_dict

df.shape

df.info()

len(df)

df=df.dropna()

df

df=df.reset_index()

df

df.info()

from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()
label = le.fit_transform(df['pendidikan'])

df["pendidikan"] = label

df

label2 = le.fit_transform(df['jenis_kelamin'])
df["jenis_kelamin"] = label2

df

x = df.drop(["penerimaan"], axis=1)
x.head()

y = df["penerimaan"]
y.head()

df.info()

from sklearn.naive_bayes import GaussianNB

nbc = GaussianNB()

data_training = nbc.fit(x,y)

y_predict = data_training.predict(x)
print(y_predict)

pendidikan = 2 #Bachelor's
jenis_kelamin = 0 #Male
umur = 35
masa_kerja = 8
penghargaan = 0
penerimaan = np.average ([pendidikan, jenis_kelamin, umur, masa_kerja, penghargaan])
Data_Testing = [[pendidikan, jenis_kelamin, umur, masa_kerja, penghargaan, penerimaan]]

y_pred = data_training.predict(Data_Testing)
if y_pred == 1:
  hasil = "Ya"
elif y_pred == 0:
  hasil = "Tidak"
else:
  hasil = "error"

print ("Hasil penerimaan pada karyawan =", hasil)

from sklearn.metrics import accuracy_score
print("Nilai Akurasi =  %0.2f" % accuracy_score(y,y_predict))

from sklearn.metrics import classification_report
print(classification_report(y,y_predict))